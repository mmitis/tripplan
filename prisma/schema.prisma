// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum TripUserRole {
  CREATOR
  USER
  VIEWER
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String               @id @default(cuid())
  name               String?
  email              String?              @unique
  emailVerified      DateTime?
  image              String?
  accounts           Account[]
  sessions           Session[]
  TripAttachedPeople TripAttachedPeople[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Trip {
  id         String   @id @default(cuid())
  name       String
  date_start DateTime
  date_end   DateTime
  location   String

  TripAttachedPeople TripAttachedPeople[]
  TripAccomodation   TripAccomodation[]
}

model TripAccomodation {
  id          String   @id @default(cuid())
  name        String
  bookingLink String
  date        DateTime

  tripId String
  Trip   Trip   @relation(fields: [tripId], references: [id])
}

model TripAttachedPeople {
  id   String       @id @default(cuid())
  role TripUserRole

  tripId String
  userId String

  trip Trip @relation(fields: [tripId], references: [id])
  user User @relation(fields: [userId], references: [id])
}
