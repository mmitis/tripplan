// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum TripUserRole {
  CREATOR
  USER
  VIEWER
}

enum TripUserType {
  COMMON
  INVITE
}

enum TripTransportType {
  BUS
  PLANE
}

enum TripAccomodationProvider {
  BOOKING
}

enum TripTransportProvider {
  WIZZAIR
  RYANAIR
  LOCAL_TRAIN
  LOCAL_BUS
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  TripUser      TripUser[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Trip {
  id         String   @id @default(cuid())
  name       String
  date_start DateTime
  date_end   DateTime
  location   String


  locale   String
  currency String

  users        TripUser[]
  accomodation TripAccomodation[]
  transport    TripTransport[]
}

model TripAccomodation {
  id               String                   @id @default(cuid())
  name             String
  provider         TripAccomodationProvider
  confirmationLink String

  dateStart DateTime
  dateEnd   DateTime

  coverPhoto      String
  propertyAddress String
  propertyLink    String
  propertyPhone   String
  price           Int
  tripId          String

  trip Trip @relation(fields: [tripId], references: [id])
}

model TripTransport {
  id                String                @id @default(cuid())
  tripId            String
  type              TripTransportType
  provider          TripTransportProvider
  reservationNumber String
  price             String

  trip Trip @relation(fields: [tripId], references: [id])
}

model TripUser {
  id       String       @id @default(cuid())
  role     TripUserRole
  userType TripUserType
  tripId   String
  userId   String?
  email    String?

  trip Trip  @relation(fields: [tripId], references: [id])
  user User? @relation(fields: [userId], references: [id])
}
